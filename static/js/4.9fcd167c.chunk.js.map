{"version":3,"sources":["components/HOC/AuthRedirect.tsx","components/Dialogs/DialogItem/DialogItem.module.scss","components/Dialogs/Dialogs.module.scss","components/Dialogs/Messages/AddMessage/AddMessage.module.scss","components/Dialogs/Messages/MessageItem/MessageItem.module.scss","components/Dialogs/Messages/Messages.module.scss","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Messages/AddMessage/AddMessage.tsx","components/Dialogs/Messages/MessageItem/MessageItem.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","props","restProps","to","module","exports","React","memo","dialog","id","activeClassName","classes","active","className","dialogs__contact","dialogs__contact__avatar","src","avatar","alt","name","dialogs__contact__info","dialogs__contact__title","dialogs__contact__preview","preview","dialogs__contact__time","time","ReduxAddMessageForm","reduxForm","form","newMessage","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","maxLength50","classnamestring","newMessage__bottom","newMessage__attachments","newMessage__btn","AddMessage","newMessageText","sendMessage","MessageItem","message","fromMe","right","message__img","message__name","message__descr","description","message__time","Messages","messages__field","messages__field__title","messages__title","messages__settings","messages__area","messages","map","key","Dialogs","dialogs","dialogs__header","dialogs__contacts","dialogsPage","DialogItem","AuthRedirectComponent","DialogsContainer"],"mappings":"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","file":"static/js/4.9fcd167c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\n\r\nfunction mapStateToProps(state: AppStateType) {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  } as MapPropsType;\r\n}\r\n\r\ntype MapPropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\n\r\n// часто когда создаем HOC, мы дописываем, что он дает компоненту\r\n// дописывая в начало 'with'\r\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n  const WrappedAuthRedirect: React.FC<MapPropsType & {}> = (props) => {\r\n    let { isAuth, ...restProps } = props;\r\n    if (!props.isAuth)\r\n      return <Redirect to='/login' />;\r\n    return <WrappedComponent {...restProps as WCP} />;\r\n  }\r\n\r\n  return connect<MapPropsType, {}, WCP, AppStateType>(mapStateToProps, {})(WrappedAuthRedirect)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"DialogItem_active__1R_mR\",\"dialogs__contact\":\"DialogItem_dialogs__contact__1GNeW\",\"dialogs__contact__avatar\":\"DialogItem_dialogs__contact__avatar__3pbze\",\"dialogs__contact__info\":\"DialogItem_dialogs__contact__info__3_Dxo\",\"dialogs__contact__title\":\"DialogItem_dialogs__contact__title__1WMAD\",\"dialogs__contact__preview\":\"DialogItem_dialogs__contact__preview__9hjuz\",\"dialogs__contact__time\":\"DialogItem_dialogs__contact__time__y_c9K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2XPT_\",\"dialogs__header\":\"Dialogs_dialogs__header__3om45\",\"dialogs__contacts\":\"Dialogs_dialogs__contacts__1h4a4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessage\":\"AddMessage_newMessage__1h5uD\",\"newMessage__bottom\":\"AddMessage_newMessage__bottom__2gaSD\",\"newMessage__btn\":\"AddMessage_newMessage__btn__35Y1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessageItem_message__x9msP\",\"right\":\"MessageItem_right__3-MbJ\",\"message__img\":\"MessageItem_message__img__1BK4R\",\"message__name\":\"MessageItem_message__name__1tFum\",\"message__descr\":\"MessageItem_message__descr__1ayF4\",\"message__time\":\"MessageItem_message__time__SG8b7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages__field\":\"Messages_messages__field__1FkiV\",\"messages__field__title\":\"Messages_messages__field__title__3trYT\",\"messages__title\":\"Messages_messages__title__2ozTa\",\"messages__area\":\"Messages_messages__area__2JRt6\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { DialogItemType } from \"../../../redux/dialogsReducer\";\r\nimport classes from './DialogItem.module.scss';\r\n\r\n\r\ntype DialogItemObj = {\r\n    dialog: DialogItemType\r\n}\r\n\r\n\r\nconst DialogItemMemo: React.FC<DialogItemObj> = (props) => {\r\n    return (\r\n        <NavLink to={`/dialogs/${props.dialog.id}`} activeClassName={classes.active}>\r\n            <li className={`${classes.dialogs__contact} ${classes.active}`}>\r\n                <img className={classes.dialogs__contact__avatar} src={props.dialog.avatar} alt={props.dialog.name} />\r\n                <div className={classes.dialogs__contact__info}>\r\n                    <h6 className={classes.dialogs__contact__title}>\r\n                        {props.dialog.name}\r\n                    </h6>\r\n                    <span className={classes.dialogs__contact__preview}>\r\n                        {props.dialog.preview}\r\n                    </span>\r\n                    <span className={classes.dialogs__contact__time}>\r\n                        {props.dialog.time}\r\n                    </span>\r\n                </div>\r\n                <i className=\"far fa-envelope\"></i>\r\n            </li>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default React.memo(DialogItemMemo);","import React from 'react';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { maxLength50, required } from '../../../../utils/validators/validator';\r\nimport { Textarea } from '../../../common/FormsControl/FormsControl';\r\nimport classes from './AddMessage.module.scss';\r\n\r\ntype AddMessageType = {\r\n  sendMessage: (newMessage: string) => void\r\n}\r\n\r\ntype AddMessageFormType = {\r\n  newMessage: string\r\n}\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormType>> = (props) => {\r\n  return (\r\n    <form className={classes.newMessage} onSubmit={props.handleSubmit}>\r\n      <Field \r\n        component={Textarea} \r\n        name=\"newMessage\" \r\n        placeholder=\"Write your reply...\"\r\n        validate={[required, maxLength50]} \r\n        classnamestring=\"formControlMessageTextarea\" />\r\n      <div className={classes.newMessage__bottom}>\r\n        <div className={classes.newMessage__attachments}>\r\n          <i className=\"fas fa-paperclip\"></i>\r\n        </div>\r\n        <button className={classes.newMessage__btn}>Send Message</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ReduxAddMessageForm = reduxForm<AddMessageFormType>({form: \"Add Message\"})(AddMessageForm)\r\n\r\nconst AddMessage: React.FC<AddMessageType> = (props) => {\r\n\r\n  const sendMessageCallback = (newMessageText: AddMessageFormType) => {\r\n    props.sendMessage(newMessageText.newMessage)\r\n  }\r\n\r\n  return(\r\n    <ReduxAddMessageForm onSubmit={sendMessageCallback} />\r\n  )\r\n}\r\n\r\nexport default AddMessage;","import React from 'react';\r\nimport classes from './MessageItem.module.scss';\r\nimport {MessageItemType} from \"../../../../redux/dialogsReducer\";\r\n\r\n\r\ntype MessageItemObj = {\r\n  message: MessageItemType\r\n}\r\n\r\nconst MessageItem: React.FC<MessageItemObj> = (props) => {\r\n  return (\r\n    <div className={`${classes.message} ${props.message.fromMe ? null : classes.right}`}>\r\n      <img className={classes.message__img} src={props.message.avatar} alt={props.message.name} />\r\n      <h6 className={classes.message__name}>{props.message.name}</h6>\r\n      <p className={classes.message__descr}>{props.message.description}</p>\r\n      <span className={classes.message__time}>{props.message.time}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MessageItemType } from \"../../../redux/dialogsReducer\";\r\nimport AddMessageForm from './AddMessage/AddMessage';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport classes from './Messages.module.scss';\r\n\r\n\r\ntype MessagesPropsType = {\r\n  messages: Array<MessageItemType>;\r\n  sendMessage: (newMessage: string) => void\r\n}\r\n\r\nconst Messages: React.FC<MessagesPropsType> = (props) => {\r\n  return (\r\n    <div className={classes.messages__field}>\r\n      <div className={classes.messages__field__title}>\r\n        <h4 className={classes.messages__title}>---Contact---</h4>\r\n        <NavLink className={classes.messages__settings} to={'/settings'}>\r\n          <i className=\"fas fa-ellipsis-h\"></i>\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.messages__area}>\r\n        {props.messages.map(message => {\r\n          return (\r\n            <MessageItem\r\n              key={message.id}\r\n              message={message}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n      <AddMessageForm sendMessage={props.sendMessage} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { DialogsPageType } from \"../../redux/dialogsReducer\";\r\nimport DialogItem from './../Dialogs/DialogItem/DialogItem';\r\nimport classes from './Dialogs.module.scss';\r\nimport Messages from './Messages/Messages';\r\n\r\ntype DialogsPropsType = {\r\n  dialogsPage: DialogsPageType\r\n  sendMessage: (newMessage: string) => void\r\n}\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <h4 className={classes.dialogs__header}>Chat / Messages</h4>\r\n      <div>\r\n        <ul className={classes.dialogs__contacts}>\r\n          {props.dialogsPage.dialogs.map(dialog => {\r\n            return (\r\n              <DialogItem key={dialog.id} dialog={dialog} />\r\n            )\r\n          })}\r\n        </ul>\r\n        <Messages\r\n          messages={props.dialogsPage.messages}\r\n          sendMessage={props.sendMessage} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { DialogsPageType, sendMessage } from '../../redux/dialogsReducer';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { withAuthRedirect } from '../HOC/AuthRedirect';\r\nimport Dialogs from './Dialogs';\r\n\r\ntype MapStateToPropsType = {\r\n  dialogsPage: DialogsPageType\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\nfunction mapStateToProps(state: AppStateType): MapStateToPropsType {\r\n  return {\r\n    // диалоги будут перерисовываться, если этот объект будет иным\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, { sendMessage })(AuthRedirectComponent)\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}