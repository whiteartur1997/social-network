{"version":3,"sources":["components/HOC/AuthRedirect.tsx","components/Profile/MyPosts/AddPost/AddPost.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/Profile.module.scss","assets/img/cover.jpg","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","components/Profile/MyPosts/AddPost/AddPost.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","props","restProps","to","module","exports","ReduxAddPostForm","reduxForm","form","className","classes","addPost__form","onSubmit","handleSubmit","addPost__avatar","src","avatar","alt","Field","name","component","Textarea","placeholder","classnamestring","validate","required","maxLength30","addPost__btn","AddPost","dispatch","useDispatch","addPost","newPostText","reset","Post","post","post__info","post__info__avatar","post__info__link","post__info__title","post__info__time","time","post__content","post__content__text","message","post__likes","post__likes__text","likeCount","MyPosts","React","memo","posts","map","key","id","MyPostsContainer","profilePage","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","onBlur","updateUserStatus","autoFocus","onDoubleClick","s","ProfileInfo","profile","profileInfo","profileCover","profileCoverImg","photos","large","coverImage","profileBody","profileAvatar","small","profileDescr","profileDescrTitle","fullName","aboutMe","profileDescrJobSearch","lookingForAJob","profileDescrJobDescr","lookingForAJobDescription","profileContacts","href","contacts","mainLink","facebook","instagram","github","twitter","youtube","vk","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","setUserProfile","setUserStatus","Component","compose","withRouter"],"mappings":"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","file":"static/js/3.be230112.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\n\r\nfunction mapStateToProps(state: AppStateType) {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  } as MapPropsType;\r\n}\r\n\r\ntype MapPropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\n\r\n// часто когда создаем HOC, мы дописываем, что он дает компоненту\r\n// дописывая в начало 'with'\r\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n  const WrappedAuthRedirect: React.FC<MapPropsType & {}> = (props) => {\r\n    let { isAuth, ...restProps } = props;\r\n    if (!props.isAuth)\r\n      return <Redirect to='/login' />;\r\n    return <WrappedComponent {...restProps as WCP} />;\r\n  }\r\n\r\n  return connect<MapPropsType, {}, WCP, AppStateType>(mapStateToProps, {})(WrappedAuthRedirect)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"AddPost_addPost__3gdJb\",\"addPost__form\":\"AddPost_addPost__form__dc3nd\",\"addPost__avatar\":\"AddPost_addPost__avatar__kzdNA\",\"addPost__btn\":\"AddPost_addPost__btn__MAfMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2W45j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__10r8G\",\"post__info\":\"Post_post__info__1gdN7\",\"post__info__avatar\":\"Post_post__info__avatar__2IDR-\",\"post__info__title\":\"Post_post__info__title__3YTBw\",\"post__info__time\":\"Post_post__info__time__2UHiN\",\"post__content__text\":\"Post_post__content__text__LmSDL\",\"post__likes\":\"Post_post__likes__3dLHp\",\"post__likes__text\":\"Post_post__likes__text__1qNX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1kP-3\"};","module.exports = __webpack_public_path__ + \"static/media/cover.4d76cfcd.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3RTVT\",\"profileCover\":\"ProfileInfo_profileCover__3qCiu\",\"profileCoverImg\":\"ProfileInfo_profileCoverImg__2FE0Q\",\"profileBody\":\"ProfileInfo_profileBody__1gvoO\",\"profileAvatar\":\"ProfileInfo_profileAvatar__UZTlJ\",\"profileDescr\":\"ProfileInfo_profileDescr__9UL4q\",\"profileContacts\":\"ProfileInfo_profileContacts__3rFPR\",\"profileDescrTitle\":\"ProfileInfo_profileDescrTitle__1pB0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__1vw-W\"};","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm, reset} from 'redux-form';\r\nimport { maxLength30, required } from '../../../../utils/validators/validator';\r\nimport { Textarea } from '../../../common/FormsControl/FormsControl';\r\nimport avatar from './../../../../assets/img/batman.png';\r\nimport classes from './AddPost.module.scss';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype AddPostType = {\r\n  addPost: (newPostText: AddPostFormType) => void\r\n}\r\n\r\nexport type AddPostFormType = {\r\n  post: string\r\n}\r\n\r\nconst AddPostForm: React.FC<InjectedFormProps<AddPostFormType>> = (props) => {\r\n\r\n  return (\r\n    <form className={classes.addPost__form} onSubmit={props.handleSubmit}>\r\n      <img className={classes.addPost__avatar} src={avatar} alt={\"avatar\"} />\r\n      <div>\r\n        <Field \r\n          name=\"post\" \r\n          component={Textarea}\r\n          placeholder={\"What's new?\"}\r\n          classnamestring={\"formControlPostTextarea\"} \r\n          validate={[required, maxLength30]} />\r\n        <button className={classes.addPost__btn}>Add Post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ReduxAddPostForm = reduxForm<AddPostFormType>(\r\n  { form: \"Add Post\" }\r\n)(AddPostForm);\r\n\r\n\r\nconst AddPost: React.FC<AddPostType> = (props) => {\r\n    const dispatch = useDispatch();\r\n  const submitHandler = (newPostText: AddPostFormType) => {\r\n    props.addPost(newPostText);\r\n    dispatch(reset(\"Add Post\"));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.addPost}>\r\n      <ReduxAddPostForm onSubmit={submitHandler} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPost;","import React from \"react\";\r\nimport classes from \"./Post.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {PostType} from \"../../../../redux/profileReducer\";\r\n\r\n\r\n\r\n\r\ntype PostObjType = {\r\n  post: PostType\r\n}\r\n\r\n\r\nconst Post: React.FC<PostObjType> = (props) => {\r\n  return (\r\n    <article className={classes.post}>\r\n      <div className={classes.post__info}>\r\n        <div>\r\n          <img className={classes.post__info__avatar} src={props.post.avatar} alt={props.post.name} />\r\n        </div>\r\n        <div>\r\n          <NavLink className={classes.post__info__link} to='/profile'>\r\n            <h6 className={classes.post__info__title}>{props.post.name}</h6>\r\n          </NavLink>\r\n          <span className={classes.post__info__time}>{props.post.time}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.post__content}>\r\n        <p className={classes.post__content__text}>\r\n          {props.post.message}\r\n        </p>\r\n      </div>\r\n      <div className={classes.post__likes}>\r\n        <i className=\"far fa-heart\"></i>\r\n        <span className={classes.post__likes__text}>{props.post.likeCount} likes</span>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport {PostType} from \"../../../redux/profileReducer\";\r\nimport AddPost, {AddPostFormType} from \"./AddPost/AddPost\";\r\nimport classes from \"./MyPosts.module.scss\";\r\nimport Post from \"./Post/Post\";\r\n\r\ntype MyPostsType = {\r\n    posts: PostType[]\r\n    addPost: (newPostText: AddPostFormType) => void\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsType> = React.memo((props) => {\r\n    return (\r\n        <>\r\n            <div className={classes.posts}>\r\n                <AddPost\r\n                    addPost={props.addPost}\r\n                />\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {props.posts.map(post => <Post key={post.id} post={post}/>)}\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { addPost, PostType} from \"../../../redux/profileReducer\";\r\nimport { AppStateType } from \"../../../redux/redux-store\";\r\nimport { AddPostFormType } from \"./AddPost/AddPost\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\ntype MapStateToPropsType = {\r\n  posts: PostType[]\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n  addPost: (newPostText: AddPostFormType) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n}\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n  return {\r\n    addPost: (newPostText: AddPostFormType) => {\r\n      dispatch(addPost(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, MapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport s from \"./ProfileStatus.module.scss\";\r\n\r\ntype ProfileStatusPropsType = {\r\n  status: string\r\n  updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks: React.FC<ProfileStatusPropsType> = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const [status, setStatus] = useState<string>(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateUserStatus(status);\r\n  }\r\n\r\n  const onStatusChanged = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (editMode\r\n    ? <>\r\n      <input\r\n        value={status}\r\n        onChange={onStatusChanged}\r\n        onBlur={deactivateEditMode}\r\n        autoFocus />\r\n    </>\r\n    : <span\r\n      onDoubleClick={activateEditMode}\r\n      className={s.status}>{props.status || \"No status\"}</span>\r\n  )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport avatar from \"../../../assets/img/batman.png\";\r\nimport coverImage from \"../../../assets/img/cover.jpg\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport { ProfileType } from \"../Profile\";\r\nimport classes from \"./ProfileInfo.module.scss\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo: React.FC<ProfileType> = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={classes.profileInfo}>\r\n            <div className={classes.profileCover}>\r\n                <img className={classes.profileCoverImg} src={props.profile?.photos.large || coverImage} alt=\"cover\" />\r\n            </div>\r\n            <div className={classes.profileBody}>\r\n                <div className={classes.profileAvatar}>\r\n                    <img src={props.profile?.photos.small || avatar} alt=\"avatar\" />\r\n                </div>\r\n                <div className={classes.profileDescr}>\r\n                    <h3 className={classes.profileDescrTitle}>{props.profile?.fullName}</h3>\r\n                    <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus} />\r\n                    <span>{props.profile.aboutMe}</span>\r\n                    <span className={classes.profileDescrJobSearch}>\r\n                        {props.profile?.lookingForAJob ? \"Ищу работу\" : \"Не ищу работу\"}\r\n                    </span>\r\n                    <span className={classes.profileDescrJobDescr}>{props.profile?.lookingForAJobDescription}</span>\r\n                </div>\r\n                <div className={classes.profileContacts}>\r\n                    <ul>\r\n                        <li>Main: <a href={`${props.profile.contacts.mainLink}`}>Main</a></li>\r\n                        <li>FB: <a href={`${props.profile.contacts.facebook}`}>FB</a></li>\r\n                        <li>Insta: <a href={`${props.profile.contacts.instagram}`}>Insta</a></li>\r\n                        <li>Github: <a href={`${props.profile.contacts.github}`}>Github</a></li>\r\n                        <li>Twitter: <a href={`${props.profile.contacts.twitter}`}>Twitter</a></li>\r\n                        <li>Youtube: <a href={`${props.profile.contacts.youtube}`}>Youtube</a></li>\r\n                        <li>VK: <a href={`${props.profile.contacts.vk}`}>VK</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport { UserProfileType } from '../../redux/profileReducer';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport classes from './Profile.module.scss';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nexport type ProfileType = {\r\n  profile: UserProfileType | null\r\n  status: string\r\n  updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst Profile: React.FC<ProfileType> = (props) => {\r\n\r\n  return (\r\n    <div className={classes.profile}>\r\n      <ProfileInfo\r\n        updateUserStatus={props.updateUserStatus}\r\n        profile={props.profile}\r\n        status={props.status} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { withAuthRedirect } from '../HOC/AuthRedirect';\r\nimport { setUserProfile, setUserStatus, updateUserStatus, UserProfileType } from \"./../../redux/profileReducer\";\r\nimport Profile from './Profile';\r\n\r\ntype PathParamsType = { userId: string };\r\n\r\ntype WithUrlProfileContainerType = RouteComponentProps<PathParamsType> & ProfileContainerType;\r\n\r\ntype MapStateToPropsType = {\r\n  profile: UserProfileType | null\r\n  status: string\r\n  authorizedUserId: number | null\r\n  isAuth: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n  setUserProfile: (userId: number | null) => void\r\n  setUserStatus: (userId: number | null) => void\r\n  updateUserStatus: (status: string) => void\r\n}\r\n\r\ntype ProfileContainerType = MapStateToPropsType & MapDispatchToPropsType;\r\n\r\n\r\n// ProfileContainer делает грязную работу для Profile (запрос на сервер)\r\nclass ProfileContainer extends Component<WithUrlProfileContainerType> {\r\n  componentDidMount() {\r\n    const userId = +this.props.match.params.userId || this.props.authorizedUserId;\r\n    this.props.setUserProfile(userId);\r\n    this.props.setUserStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return <Profile\r\n      {...this.props}\r\n      updateUserStatus={this.props.updateUserStatus}\r\n      profile={this.props.profile} />\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: AppStateType): MapStateToPropsType {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, { setUserProfile, setUserStatus, updateUserStatus }),\r\n  withRouter,\r\n  withAuthRedirect)\r\n  (ProfileContainer);"],"sourceRoot":""}